plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.parcelize'

    // For Room
    id 'com.google.devtools.ksp'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id "io.kotest"
}

android {
    namespace 'org.wspcgir.strong_giraffe'
    compileSdk 34

    defaultConfig {
        applicationId "org.wspcgir.strong_giraffe"
        minSdk 33
        targetSdk 34
        versionCode 18
        versionName "0.9.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        beta {
            applicationIdSuffix ".beta"
            versionNameSuffix "-beta"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.10'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    applicationVariants.all { variant ->
        variant.addJavaSourceFoldersToModel(
                new File(buildDir, "generated/ksp/${variant.name}/kotlin")
        )
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}

class RoomSchemaArgProvider implements CommandLineArgumentProvider {

    @InputDirectory
    @PathSensitive(PathSensitivity.RELATIVE)
    File schemaDir

    RoomSchemaArgProvider(File schemaDir) {
        this.schemaDir = schemaDir
    }

    @Override
    Iterable<String> asArguments() {
        // Note: If you're using KAPT and javac, change the line below to
        // return ["-Aroom.schemaLocation=${schemaDir.path}".toString()].
        return ["room.schemaLocation=${schemaDir.path}".toString()]
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material3:material3:1.0.0-alpha11'
    implementation 'androidx.compose.foundation:foundation-layout-android:1.7.2'
    implementation 'androidx.navigation:navigation-compose:2.8.9'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.3'

    def kotest_version = '5.7.2'
    testImplementation "io.kotest:kotest-property-jvm:$kotest_version"
    testImplementation "io.kotest:kotest-assertions-core-jvm:$kotest_version"
    testImplementation "io.kotest:kotest-runner-junit5:$kotest_version"

    androidTestImplementation 'androidx.test.ext:junit:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    def testing_version = '1.7.8'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$testing_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$testing_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$testing_version"

    def room_version = "2.5.2"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation 'com.google.devtools.ksp:symbol-processing-api:1.7.0-1.0.6'
    ksp "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"
}

ksp {
    arg(new RoomSchemaArgProvider(new File(projectDir, "schemas")))
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}